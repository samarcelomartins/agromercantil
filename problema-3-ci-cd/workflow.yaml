name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pytest

      - name: Lint with flake8
        run: |
          flake8 .

      - name: Format with black
        run: |
          black --check .

  run-tests:
    runs-on: ubuntu-latest
    needs: validate-code

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging
        run: |
          # Comandos para deploy em staging
          echo "Deploying to staging..."

      - name: Run Staging Tests
        run: |
          # Comandos para testes em staging
          echo "Running staging tests..."

      - name: Deploy to Production
        if: success()
        run: |
          # Comandos para deploy em produção
          echo "Deploying to production..."

  notify:
    runs-on: ubuntu-latest
    needs: [validate-code, run-tests, deploy]
    if: failure()

    steps:
      - name: Notify team of failure
        run: |
          # Comando para enviar notificação (exemplo usando Slack)
          curl -X POST -H 'Content-type: application/json' --data '{"text":"CI/CD Pipeline failed!"}' $SLACK_WEBHOOK_URL
